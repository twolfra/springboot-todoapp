services:
  db:
    image: postgres:14.11
    container_name: todoapp-db
    environment:
      POSTGRES_USER: todoapp
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: todoapp
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"   # host:container
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U todoapp -d todoapp"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - todoapp-net

  backend:
    build: .
    container_name: todoapp-backend
    env_file: .env.prod
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/todoapp
      SPRING_DATASOURCE_USERNAME: todoapp
      SPRING_DATASOURCE_PASSWORD: secret
      SPRING_JPA_HIBERNATE_DDL_AUTO: none
      SPRING_JPA_SHOW_SQL: "false"
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8080:8080"
    networks:
      - todoapp-net

  frontend:
    build:
      context: ../todo-frontend   # path to your React frontend project
      dockerfile: Dockerfile
    container_name: todoapp-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      # use service name "backend" so container can resolve it
      VITE_API_URL: http://backend:8080
    volumes:
      - type: bind
        source: ../todo-frontend
        target: /app
      - type: volume
        source: node_modules
        target: /app/node_modules
    networks:
      - todoapp-net

volumes:
  postgres_data:
  node_modules:

networks:
  todoapp-net:
    driver: bridge
